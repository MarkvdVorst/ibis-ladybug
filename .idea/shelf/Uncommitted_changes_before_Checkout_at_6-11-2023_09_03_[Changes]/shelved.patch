Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>org.ibissource</groupId>\n  <artifactId>ibis-ladybug</artifactId>\n  <version>2.3-SNAPSHOT</version>\n\n  <name>Ladybug Test Tool</name>\n  <description>\n  Ladybug adds message based debugging and message based unit testing and system testing to your Java application. Call\n  Ladybug at certain checkpoints in you code (either directly or using AOP) to generate tree based reports. Implement a\n  rerun method to be able to rerun reports and optionally stub certain checkpoints for regression testing.\n  </description>\n  <url>https://ibissource.org/</url>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <spring.version>5.3.23</spring.version>\n    <cxf.version>3.5.5</cxf.version>\n    <!-- The line below is parsed by the GitHub actions test that triggers the ladybug-frontend Cypress test -->\n    <frontend.version>0.0.49</frontend.version>\n    <!-- Create skip-replace-inject.txt (replacement is only needed in the published jar by CI/CD) (more info in nl/nn/testtool/Inject.java -->\n    <inject.replace.include>**/*.java</inject.replace.include>\n    <inject.replace.from>javax.inject</inject.replace.from>\n    <inject.replace.to>nl.nn.testtool</inject.replace.to>\n  </properties>\n\n  <organization>\n    <name>WeAreFrank!</name>\n    <url>https://github.com/ibissource/ibis-ladybug</url>\n  </organization>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>manual</distribution>\n    </license>\n  </licenses>\n\n  <developers>\n    <developer>\n      <name>Jaco de Groot</name>\n      <email>jaco@ibissource.org</email>\n      <organization>Ibissource</organization>\n      <organizationUrl>https://ibissource.org</organizationUrl>\n    </developer>\n    <developer>\n      <name>Niels Meijer</name>\n      <email>niels@ibissource.org</email>\n      <organization>Ibissource</organization>\n      <organizationUrl>https://ibissource.org</organizationUrl>\n    </developer>\n  </developers>\n\n  <dependencies>\n    <!--\n    https://www.npmjs.com/package/@wearefrank/ladybug\n    https://www.webjars.org/all (search for @wearefrank/ladybug)\n    https://search.maven.org/artifact/org.webjars.npm/wearefrank__ladybug\n    -->\n    <dependency>\n      <groupId>xalan</groupId>\n      <artifactId>xalan</artifactId>\n      <version>2.7.3</version>\n    </dependency>\n    <dependency>\n      <groupId>xalan</groupId>\n      <artifactId>serializer</artifactId>\n      <version>2.7.3</version>\n    </dependency>\n    <dependency>\n      <groupId>org.webjars.npm</groupId>\n      <artifactId>wearefrank__ladybug</artifactId>\n      <version>${frontend.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.cxf</groupId>\n      <artifactId>cxf-rt-rs-client</artifactId>\n      <version>${cxf.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n      <artifactId>jackson-jaxrs-json-provider</artifactId>\n      <version>2.13.4</version>\n      <exclusions>\n        <!-- Copied exclusion from iaf-core/pom.xml -->\n        <exclusion>\n          <groupId>jakarta.activation</groupId>\n          <artifactId>jakarta.activation-api</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>javax.servlet-api</artifactId>\n      <version>3.1.0</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.ibissource</groupId>\n      <artifactId>ibis-echo2</artifactId>\n      <version>2.0.4</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-api</artifactId>\n      <version>1.7.30</version>\n    </dependency>\n    <dependency>\n      <groupId>commons-lang</groupId>\n      <artifactId>commons-lang</artifactId>\n      <version>2.6</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-jdbc</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>net.sf.saxon</groupId>\n      <artifactId>Saxon-HE</artifactId>\n      <version>10.8</version>\n    </dependency>\n    <dependency>\n      <groupId>org.ibissource</groupId>\n      <artifactId>ibis-xerces</artifactId>\n      <version>2.12.1-xml-schema-1.1</version>\n    </dependency>\n    <dependency>\n      <groupId>org.projectlombok</groupId>\n      <artifactId>lombok</artifactId>\n      <version>1.18.10</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter</artifactId>\n      <version>5.8.2</version>\n      <scope>test</scope>\n    </dependency>\n    <!-- https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4 -->\n    <dependency>\n      <groupId>org.junit.vintage</groupId>\n      <artifactId>junit-vintage-engine</artifactId>\n      <version>5.8.2</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-core</artifactId>\n      <version>1.2.10</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-classic</artifactId>\n      <version>1.2.10</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.h2database</groupId>\n      <artifactId>h2</artifactId>\n      <version>2.2.220</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.liquibase</groupId>\n      <artifactId>liquibase-core</artifactId>\n      <version>4.19.0</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-dbcp2</artifactId>\n      <version>2.9.0</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.quarkus.arc</groupId>\n      <artifactId>arc</artifactId>\n      <version>1.13.4.Final</version><!-- 2.7.0.Final doesn't compile with Java 8 -->\n      <scope>provided</scope>\n      <exclusions>\n        <!-- Exclude quarkus-core to prevent following warning when running JUnit: SLF4J: Class path contains multiple SLF4J bindings. -->\n        <!-- And with jakarta.enterprise.cdi-api as a normal dependency all transitive dependencies can be excluded (Quarkus arc is then only needed for DefaultBean) -->\n        <exclusion>\n          <groupId>*</groupId>\n          <artifactId>*</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <!-- Normal dependency instead of a transitive dependency of Quarkus arc (Spring is using the cdi-api annotations also) -->\n    <dependency>\n      <groupId>jakarta.enterprise</groupId>\n      <artifactId>jakarta.enterprise.cdi-api</artifactId>\n      <version>2.0.2</version>\n      <scope>provided</scope>\n    </dependency>\n    <!-- Resolve @JsonbTransient -->\n    <dependency>\n      <groupId>javax.json.bind</groupId>\n      <artifactId>javax.json.bind-api</artifactId>\n      <version>1.0</version>\n      <scope>provided</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <!-- Enable ibis-echo2 timestamp versions -->\n    <repository>\n      <id>ibissource</id>\n      <name>Ibissource</name>\n      <url>https://nexus.frankframework.org/content/repositories/public</url>\n    </repository>\n  </repositories>\n\n  <build>\n    <defaultGoal>install</defaultGoal>\n    <plugins>\n      <plugin>\n        <groupId>com.google.code.maven-replacer-plugin</groupId>\n          <artifactId>replacer</artifactId>\n          <version>1.5.3</version>\n          <executions>\n            <execution>\n                <phase>generate-resources</phase><!-- generate-resources instead of generate-sources to run after copyright check with <phase>process-sources</phase> -->\n                <goals>\n                  <goal>replace</goal>\n                </goals>\n            </execution>\n          </executions>\n          <configuration>\n            <basedir>${basedir}</basedir>\n            <includes>\n              <include>${inject.replace.include}</include>\n            </includes>\n            <replacements>\n               <replacement>\n                 <token>import ${inject.replace.from}.Inject;</token>\n                 <value>import ${inject.replace.to}.Inject;</value>\n               </replacement>\n            </replacements>\n        </configuration>\n      </plugin>\n      <!--\n        Add META-INF/jandex.idx, see also:\n          https://quarkus.io/guides/cdi-reference#how-to-generate-a-jandex-index\n          https://quarkus.io/guides/cdi-reference#bean_discovery\n          https://quarkus.io/guides/getting-started#working-with-multi-module-project-or-external-modules\n      -->\n      <plugin>\n        <groupId>org.jboss.jandex</groupId>\n        <artifactId>jandex-maven-plugin</artifactId>\n        <version>1.2.3</version>\n        <executions>\n          <execution>\n            <id>make-index</id>\n            <goals>\n              <goal>jandex</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.10.1</version>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>3.2.2</version>\n        <configuration>\n          <archive>\n            <addMavenDescriptor>true</addMavenDescriptor>\n            <manifest>\n              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n            </manifest>\n          </archive>\n        </configuration>\n        <executions><!-- Create a test jar for ibis-ladybug-test-webapp to depend on. See also https://maven.apache.org/plugins/maven-jar-plugin/examples/create-test-jar.html -->\n          <execution>\n            <goals>\n              <goal>test-jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-source-plugin</artifactId>\n        <version>3.2.1</version>\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <phase>prepare-package</phase>\n            <goals>\n              <goal>jar-no-fork</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>3.4.1</version>\n        <executions>\n          <execution>\n            <id>attach-javadocs</id>\n            <goals>\n              <goal>jar</goal>\n              <goal>test-jar</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <additionalJOptions>\n            <additionalJOption>-Xwerror</additionalJOption>\n          </additionalJOptions>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>2.22.2</version>\n        <configuration>\n          <!-- redirectTestOutputToFile>true</redirectTestOutputToFile -->\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-deploy-plugin</artifactId>\n        <version>2.8.2</version>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>2.5.3</version>\n        <configuration>\n          <tagNameFormat>v@{project.version}</tagNameFormat>\n          <autoVersionSubmodules>true</autoVersionSubmodules>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.commonjava.maven.plugins</groupId>\n        <artifactId>directory-maven-plugin</artifactId>\n        <version>1.0</version>\n        <executions>\n          <execution>\n            <id>find-project-root-directory</id>\n            <goals>\n              <goal>directory-of</goal>\n            </goals>\n            <phase>initialize</phase>\n            <configuration>\n              <property>ibis.ladybug.rootdir</property>\n              <project>\n                <groupId>org.ibissource</groupId>\n                <artifactId>ibis-ladybug</artifactId>\n              </project>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-site-plugin</artifactId>\n        <version>3.12.1</version>\n        <configuration>\n          <skip>true</skip><!-- Prevent copyright check running a second time and failing because of replacements by replacer-plugin. And speed up the build in Jenkins (generated site isn't used) -->\n        </configuration>\n      </plugin>\n    </plugins>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.eclipse.m2e</groupId>\n          <artifactId>lifecycle-mapping</artifactId>\n          <version>1.0.0</version>\n          <configuration>\n            <lifecycleMappingMetadata>\n              <pluginExecutions>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.glassfish.copyright</groupId>\n                    <artifactId>glassfish-copyright-maven-plugin</artifactId>\n                    <versionRange>[2.4,)</versionRange>\n                    <goals>\n                      <goal>check</goal>\n                      <goal>copyright</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore />\n                  </action>\n                </pluginExecution>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.commonjava.maven.plugins</groupId>\n                    <artifactId>directory-maven-plugin</artifactId>\n                    <versionRange>[1.0,)</versionRange>\n                    <goals>\n                      <goal>directory-of</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore />\n                  </action>\n                </pluginExecution>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <versionRange>[3.1.2,)</versionRange>\n                    <goals>\n                      <goal>check</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore />\n                  </action>\n                </pluginExecution>\n              </pluginExecutions>\n            </lifecycleMappingMetadata>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n\n  <reporting>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-project-info-reports-plugin</artifactId>\n        <version>3.4.1</version>\n      </plugin>\n      <!-- http://maven.apache.org/plugins/maven-javadoc-plugin/usage.html \n        Generate Javadocs As Part Of Project Reports -->\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>3.4.1</version>\n      </plugin>\n    </plugins>\n  </reporting>\n\n  <scm>\n    <url>https://github.com/ibissource/ibis-ladybug</url>\n    <connection>scm:git:https://github.com/ibissource/ibis-ladybug.git</connection>\n    <developerConnection>scm:git:https://github.com/ibissource/ibis-ladybug.git</developerConnection>\n    <tag>HEAD</tag>\n  </scm>\n\n  <profiles>\n    <profile>\n      <id>skipTests</id>\n      <properties>\n        <skipTests>true</skipTests>\n      </properties>\n    </profile>\n    <profile>\n      <id>skip-replace-inject</id>\n      <activation>\n        <file>\n          <exists>skip-replace-inject.txt</exists>\n        </file>\n      </activation>\n      <properties>\n        <inject.replace.include>DISABLE</inject.replace.include>\n      </properties>\n    </profile>\n    <profile>\n      <id>skip-copyright</id>\n      <activation>\n        <property>\n          <name>!maven.skip.copyright</name>\n          <value>!true</value>\n        </property>\n      </activation> \n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.glassfish.copyright</groupId>\n            <artifactId>glassfish-copyright-maven-plugin</artifactId>\n            <version>2.4</version>\n            <executions>\n              <execution>\n                <id>Check-CopyRight-Notice</id>\n                <goals>\n                  <goal>copyright</goal><!-- Checks for Copyright notices -->\n                  <goal>check</goal><!-- Fails the build -->\n                </goals>\n                <phase>process-sources</phase>\n              </execution>\n            </executions>\n            <configuration>\n              <excludeFile>${ibis.ladybug.rootdir}${file.separator}copyrightExcludeFile.txt</excludeFile>\n              <useDash>true</useDash>\n              <templateFile>${ibis.ladybug.rootdir}/copyrightTemplateFile.txt</templateFile>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>ossrh</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>1.6</version>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n            <configuration>\n              <passphrase>${gpg.passphrase}</passphrase>\n              <gpgArguments>\n                <!-- This is necessary for gpg to not try to use the pinentry programs -->\n                <arg>--batch</arg>\n                <arg>--no-tty</arg>\n                <arg>--pinentry-mode</arg>\n                <arg>loopback</arg>\n              </gpgArguments>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.5.3</version>\n            <configuration>\n              <autoVersionSubmodules>true</autoVersionSubmodules>\n              <useReleaseProfile>false</useReleaseProfile>\n              <releaseProfiles>release</releaseProfiles>\n              <goals>deploy</goals>\n              <tagNameFormat>v@{project.version}</tagNameFormat>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.sonatype.plugins</groupId>\n            <artifactId>nexus-staging-maven-plugin</artifactId>\n            <version>1.6.8</version>\n            <extensions>true</extensions>\n            <configuration>\n              <serverId>ossrh</serverId>\n              <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n              <autoReleaseAfterClose>false</autoReleaseAfterClose>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n      <distributionManagement>\n        <repository>\n          <id>ossrh</id>\n          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n        <snapshotRepository>\n          <id>ossrh</id>\n          <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <site>\n          <id>www.ibissource.org</id>\n          <url>file:target/site-deploy</url>\n        </site>\n      </distributionManagement>\n    </profile>\n    <profile>\n      <id>ibissource</id>\n      <distributionManagement>\n        <repository>\n          <id>ibissource</id>\n          <url>https://nexus.frankframework.org/content/repositories/releases</url>\n        </repository>\n        <snapshotRepository>\n          <id>ibissource</id>\n          <url>https://nexus.frankframework.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <site>\n          <id>www.ibissource.org</id>\n          <url>file:target/site-deploy</url>\n        </site>\n      </distributionManagement>\n    </profile>\n  </profiles>\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision e1b4120b3d8f0628526b8d1a4033ab7464ddde8e)
+++ b/pom.xml	(date 1699004155938)
@@ -59,6 +59,11 @@
     https://www.webjars.org/all (search for @wearefrank/ladybug)
     https://search.maven.org/artifact/org.webjars.npm/wearefrank__ladybug
     -->
+    <dependency>
+      <groupId>net.sf.saxon</groupId>
+      <artifactId>Saxon-HE</artifactId>
+      <version>10.8</version>
+    </dependency>
     <dependency>
       <groupId>xalan</groupId>
       <artifactId>xalan</artifactId>
Index: src/main/java/nl/nn/testtool/storage/database/DbmsSupport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n   Copyright 2022 WeAreFrank!\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\npackage nl.nn.testtool.storage.database;\n\nimport java.sql.SQLException;\n\nimport javax.annotation.PostConstruct;\nimport javax.inject.Inject;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.support.JdbcUtils;\nimport org.springframework.jdbc.support.MetaDataAccessException;\n\nimport lombok.Setter;\n\n/*\n\nCopied some code from https://github.com/ibissource/iaf/tree/master/core/src/main/java/nl/nn/adapterframework/jdbc/dbms\ninto this class to prevent a dependency on F!F\n\nFor concrete databaseProductName values see:\n  https://github.com/spring-projects/spring-framework/blob/main/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java\nSee that most databaseProductName values are returned as-is as commonDatabaseName:\n  https://github.com/spring-projects/spring-framework/blob/main/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java\n\n*/\n// @Singleton disabled for Quarkus for now because of the use of JdbcTemplate\npublic class DbmsSupport {\n    private @Setter @Inject @Autowired JdbcTemplate jdbcTemplate;\n    private String commonDatabaseName;\n\n    @PostConstruct\n    public void init() throws SQLException, MetaDataAccessException {\n        String databaseProductName = JdbcUtils.extractDatabaseMetaData(jdbcTemplate.getDataSource(), (dbmd) -> dbmd.getDatabaseProductName());\n        commonDatabaseName = JdbcUtils.commonDatabaseName(databaseProductName);\n    }\n\n    public String provideFirstRowsHintAfterFirstKeyword(int rowCount) {\n        String sql = \"\";\n        if (\"Oracle\".equals(commonDatabaseName)) {\n            sql += \" /*+ first_rows( \" + rowCount + \" ) */\";\n        } else if (\"Microsoft SQL Server\".equals(commonDatabaseName)) {\n            sql += \" top( \"+rowCount+\" )\";\n        }\n        return sql;\n    }\n\n    public String provideTrailingFirstRowsHint(int rowCount) {\n        String sql = \"\";\n        if (rowCount > -1) {\n            if (!\"Oracle\".equals(commonDatabaseName) && !\"Microsoft SQL Server\".equals(commonDatabaseName)) {\n                sql += \" limit \" + rowCount;\n            }\n        }\n        return sql;\n    }\n\n    public String getRowNumber(String order, String sort) {\n        if (\"Oracle\".equals(commonDatabaseName) || \"Microsoft SQL Server\".equals(commonDatabaseName)) {\n            return \"row_number() over (order by \"+order+(sort==null?\"\":\" \"+sort)+\") \"+getRowNumberShortName();\n        }\n        return \"\";\n    }\n\n    public String getRowNumberShortName() {\n        return \"rn\";\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/nl/nn/testtool/storage/database/DbmsSupport.java b/src/main/java/nl/nn/testtool/storage/database/DbmsSupport.java
--- a/src/main/java/nl/nn/testtool/storage/database/DbmsSupport.java	(revision e1b4120b3d8f0628526b8d1a4033ab7464ddde8e)
+++ b/src/main/java/nl/nn/testtool/storage/database/DbmsSupport.java	(date 1699257679539)
@@ -18,7 +18,7 @@
 import java.sql.SQLException;
 
 import javax.annotation.PostConstruct;
-import javax.inject.Inject;
+import nl.nn.testtool.Inject;
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.jdbc.core.JdbcTemplate;
Index: src/main/java/nl/nn/testtool/transform/XslTransformerReporterSaxon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/nl/nn/testtool/transform/XslTransformerReporterSaxon.java b/src/main/java/nl/nn/testtool/transform/XslTransformerReporterSaxon.java
new file mode 100644
--- /dev/null	(date 1699257679577)
+++ b/src/main/java/nl/nn/testtool/transform/XslTransformerReporterSaxon.java	(date 1699257679577)
@@ -0,0 +1,31 @@
+package nl.nn.testtool.transform;
+
+import nl.nn.testtool.TestTool;
+import nl.nn.testtool.trace.TemplateTrace;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+public class XslTransformerReporterSaxon {
+    private final TestTool testTool;
+    private final File xmlFile;
+    private final File xslFile;
+    private final String xsltResult;
+    private final List<TemplateTrace> templateTraceList;
+    private List<File> allXSLFiles;
+
+    public XslTransformerReporterSaxon(TestTool testTool, File xmlFile, File xslFile, List<TemplateTrace> templateTraceStack, String xsltResult) {
+        this.testTool = testTool;
+        this.xmlFile = xmlFile;
+        this.xslFile = xslFile;
+        this.templateTraceList = templateTraceStack;
+        this.xsltResult = xsltResult;
+        this.allXSLFiles = new ArrayList<>();
+        this.allXSLFiles.add(xslFile);
+    }
+
+    public void start(){
+
+    }
+}
